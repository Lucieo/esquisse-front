{"version":3,"sources":["images/crayons.jpeg","images/loader.gif","images/artist.gif","images/sherlock.png","images/wrong.png","images/lapin.png","images/pencil.svg","layouts/AuthPage/Login/index.js","graphQL/mutations.js","layouts/AuthPage/Signup/index.js","components/Sloggan.js","layouts/AuthPage/index.js","graphQL/queries.js","components/Loading.js","components/GameControls/CreateGame.js","graphQL/localState.js","components/requireAuth.js","components/LastGames/index.js","layouts/ConnectedPages/Home/index.js","components/ProfileItems/IconSelector.js","layouts/ConnectedPages/Profile/index.js","components/Modal/index.js","components/SketchbookDisplay/index.js","layouts/ConnectedPages/Game/GameOver.js","components/PlayerItem.js","components/GameControls/AdminGameControls.js","components/GameControls/PlayerControls.js","graphQL/subscriptions.js","layouts/ConnectedPages/Game/NewGame.js","components/Counter/Countdown.js","components/StopGame/index.js","components/Counter/applyCountdown.js","components/GameModes/GuessingMode/index.js","components/GameModes/DrawingMode/DrawingTools.js","components/GameModes/DrawingMode/DrawingControls.js","components/GameModes/DrawingMode/index.js","components/GameModes/InitMode/index.js","components/GameModes/SubmitMode/index.js","components/GameModes/index.js","layouts/ConnectedPages/Game/ActiveGame.js","components/NothingToSee.js","layouts/ConnectedPages/Game/OnGoingGame.js","layouts/ConnectedPages/Game/index.js","components/LogoutBtn.js","components/Header/index.js","components/ConnectedPageContainer.js","components/PdfFormat/index.js","layouts/ConnectedPages/index.js","index.js","images/gearLoader.gif"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref4","_ref5","_ref6","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","LOGIN_USER","gql","Login","useState","email","setEmail","password","setPassword","loginErrors","setLoginErrors","setFormValid","client","useApolloClient","useMutation","onCompleted","login","localStorage","setItem","token","writeData","data","isLoggedIn","window","location","reload","onError","error","currentError","toString","loginUser","loading","className","style","minHeight","onSubmit","e","preventDefault","variables","placeholder","type","value","onChange","setter","valid","errors","isEmail","checkForm","onClick","switchMode","SIGNUP_USER","MODIFY_USER","JOIN_GAME","LEAVE_GAME","SUBMIT_PAGE","CHANGE_GAME_STATUS","SignUp","name","setName","signupErrors","setSignupErrors","isFormValid","signupUser","newValue","valueName","isLength","min","styles","red","color","orange","yellow","green","blue","Sloggan","cache","InMemoryCache","link","HttpLink","uri","ApolloClient","BasicHome","mode","setMode","background","CrayonsBG","CURRENT_USER","LAST_GAMES","GET_USER_ID","GET_GAME_INFO","GET_ALL_SKETCHBOOKS","GET_SKETCHBOOK_DETAILS","loadingWrapper","display","alignItems","loadingImage","maxWidth","margin","Loading","src","loader","alt","CREATE_GAME","CreateGame","history","useHistory","createGame","push","id","createGameData","IS_LOGGED_IN","localType","requireAuth","WrappedComponent","useQuery","LastGames","fetchPolicy","gearLoader","getLastUserGames","map","game","index","to","sketchbooks","sketchbook","pages","content","user","currentUser","iconColor","borderColor","icon","availableIcons","IconSelector","selectedIcon","setIcon","setIconColor","response","refetchQueries","query","modifyUser","modifyData","maxLength","event","hex","Modal","open","children","closeModal","SketchbookDisplay","initialCreator","creator","initialWord","restOfPages","slice","page","pageType","disabled","hideGrid","loadTimeOffset","saveData","hideInterface","GameOver","gameId","setSketchbook","openedModal","setOpenedModal","getAllSketchbooks","endGif","PlayerItem","player","admin","AdminGameControls","players","newStatus","launchGame","copied","setCopied","text","href","onCopy","PlayerControls","joinGame","hasJoined","GAME_UPDATE","PLAYER_UPDATE_SUBSCRIPTION","TIME_TO_SUBMIT","NewGame","playerslist","creatorId","setCreator","setPlayers","useSubscription","onSubscriptionData","subscriptionData","playerUpdate","isGameAdmin","loadingSub","Countdown","timer","submiter","fontSize","date","Date","now","renderer","hours","minutes","seconds","onComplete","StopGame","GearLoader","applyCountdown","useParams","finished","setFinished","submit","setSubmit","console","log","lastPage","sketchbookId","setContent","submitPage","onbeforeunload","useEffect","DrawingTools","setBrushColor","setBrushRadius","brushRadius","DrawingControls","clear","brushColor","getSaveData","canvasDraw","lazyRadius","Sherlock","timers","GameMode","turn","gameMode","getGameMode","gameProps","gameInfo","userId","setPages","nextIndex","sketchbooksMaxIndexes","newIndex","getSketchbookId","getSketchbookInfo","NothingToSee","Wrong","illustration","marginTop","marginNull","pageWrapper","justifyContent","flexDirection","OnGoingGame","class","Lapin","setGameInfo","leaveGame","getGameInfo","gameUpdate","dataSub","status","selectGameStatus","LogoutButton","ConnectedPageContainer","PdfFormat","httpLink","headers","authorization","getItem","wsLink","WebSocketLink","options","reconnect","split","definition","getMainDefinition","kind","operation","credentials","resolvers","dataIdFromObject","o","ConnectedPaged","path","exact","Profile","IsLoggedIn","Root","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d5d430da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crayons.b8039cd2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/loader.1d7626e6.gif\";","module.exports = __webpack_public_path__ + \"static/media/artist.88839167.gif\";","module.exports = __webpack_public_path__ + \"static/media/sherlock.bb668a20.png\";","module.exports = __webpack_public_path__ + \"static/media/wrong.364ca726.png\";","module.exports = __webpack_public_path__ + \"static/media/lapin.225f5783.png\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m506.234375 215.480469-77-36c-1.324219-.621094-2.769531-.941407-4.234375-.941407h-60.523438v-17.242187c0-19.089844-15.527343-34.617187-34.617187-34.617187-9.625 0-18.339844 3.949218-24.621094 10.308593-6.277343-6.359375-14.996093-10.308593-24.617187-10.308593-9.625 0-18.339844 3.949218-24.621094 10.308593-6.28125-6.359375-14.996094-10.308593-24.617188-10.308593-9.625 0-18.339843 3.949218-24.621093 10.308593-6.28125-6.359375-14.996094-10.308593-24.617188-10.308593-19.089843 0-34.621093 15.527343-34.621093 34.617187v17.242187h-125.753907c-12.003906 0-21.769531 9.765626-21.769531 21.769532v48.460937c0 12.003907 9.765625 21.769531 21.769531 21.769531h77.601563v58.882813c0 .730469.011718 1.460937.035156 2.183594.742188 22.773437 13.851562 44.007812 34.214844 55.425781l23.878906 13.390625v101.578125c0 5.523438 4.480469 10 10 10 5.523438 0 10-4.476562 10-10v-107.441406c0-3.617188-1.953125-6.953125-5.109375-8.722656l-28.988281-16.25c-14.292969-8.015626-23.492188-22.816407-24.007813-38.640626-.015625-.507812-.023437-1.015624-.023437-1.523437v-58.882813h28.152344v1.15625c0 5.523438 4.480468 10 10 10 5.523437 0 10-4.476562 10-10v-110.398437c0-8.0625 6.558593-14.617187 14.621093-14.617187 8.058594 0 14.617188 6.558593 14.617188 14.617187v110.398437c0 5.523438 4.476562 10 10 10 5.523437 0 10-4.476562 10-10v-110.398437c0-8.0625 6.558593-14.617187 14.621093-14.617187 8.058594 0 14.617188 6.554687 14.617188 14.617187v110.398437c0 5.523438 4.476562 10 10 10s10-4.476562 10-10v-110.398437c0-8.0625 6.558594-14.617187 14.617188-14.617187 8.0625 0 14.621093 6.558593 14.621093 14.617187v110.398437c0 5.523438 4.480469 10 10 10 5.523438 0 10-4.476562 10-10v-110.398437c0-8.0625 6.558594-14.617187 14.621094-14.617187 8.058594 0 14.617187 6.558593 14.617187 14.617187v151.234375c0 28.0625-11.574218 55.339844-31.757812 74.835938-1.949219 1.886718-3.054688 4.480468-3.054688 7.191406v67.441406c0 5.523438 4.480469 10 10 10 5.523438 0 10-4.476562 10-10v-63.304688c22.175782-22.992187 34.8125-54.148437 34.8125-86.164062v-41.992188h60.523438c1.464844 0 2.910156-.320312 4.234375-.941406l77-36c3.519531-1.644531 5.765625-5.175781 5.765625-9.058594 0-3.882812-2.246094-7.414062-5.765625-9.058593zm-486.234375 33.289062v-48.460937c0-.976563.792969-1.769532 1.769531-1.769532h32.230469v52h-32.230469c-.976562 0-1.769531-.792968-1.769531-1.769531zm89.367188 1.769531h-35.367188v-52h73.523438v52zm255.109374-52h50.523438v52h-50.523438zm70.523438 46.285157v-40.570313l43.390625 20.285156zm0 0\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m255.832031 84.339844c5.519531 0 10-4.480469 10-10v-64.339844c0-5.523438-4.480469-10-10-10-5.523437 0-10 4.476562-10 10v64.339844c0 5.519531 4.476563 10 10 10zm0 0\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m178.359375 98.621094c1.953125 1.953125 4.511719 2.929687 7.070313 2.929687 2.558593 0 5.117187-.976562 7.070312-2.929687 3.90625-3.902344 3.90625-10.234375 0-14.140625l-25.628906-25.632813c-3.902344-3.902344-10.234375-3.902344-14.144532 0-3.902343 3.90625-3.902343 10.238282 0 14.144532zm0 0\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m326.570312 101.550781c2.558594 0 5.117188-.976562 7.070313-2.929687l25.628906-25.628906c3.90625-3.90625 3.90625-10.238282 0-14.144532-3.90625-3.902344-10.234375-3.902344-14.140625 0l-25.632812 25.632813c-3.902344 3.90625-3.902344 10.238281 0 14.140625 1.953125 1.953125 4.515625 2.929687 7.074218 2.929687zm0 0\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m319.671875 492c-2.640625 0-5.210937 1.070312-7.070313 2.929688-1.871093 1.859374-2.929687 4.441406-2.929687 7.070312s1.058594 5.210938 2.929687 7.070312c1.859376 1.859376 4.429688 2.929688 7.070313 2.929688 2.628906 0 5.207031-1.070312 7.066406-2.929688 1.859375-1.859374 2.933594-4.441406 2.933594-7.070312s-1.070313-5.210938-2.933594-7.070312c-1.859375-1.859376-4.4375-2.929688-7.066406-2.929688zm0 0\"\n});\n\nvar SvgPencil = function SvgPencil(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512pt\",\n    viewBox: \"0 0 512 512\",\n    width: \"512pt\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPencil, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pencil.042e7439.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState} from 'react';\nimport {useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport {isEmail} from 'validator';\nimport gql from 'graphql-tag';\nimport './Login.css';\n\n\nconst LOGIN_USER = gql`\nmutation Login($email: String!, $password: String!){\n    login(email: $email, password: $password){\n        token\n        user{\n            email\n            name\n            id\n        }\n    }\n}\n`;\n\nexport default function Login(props){\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginErrors, setLoginErrors] = useState('')\n    const [isFormValid, setFormValid] = useState(false);\n\n    const client = useApolloClient();\n    const [loginUser, { loading, error }] = useMutation(LOGIN_USER, {\n        onCompleted({login}) {\n            localStorage.setItem(\"esquisse-token\", \"Bearer \"+login.token);\n            client.writeData({ data: { isLoggedIn: true } });\n            window.location.reload();\n        },\n        onError(...error) {\n            const currentError = error[0].toString();\n            if(currentError.indexOf('Invalid Login')>-1){\n                setLoginErrors(\"C'est pas ça retente ta chance!\")\n            }\n        }\n    })\n\n    const checkForm = (value, setter)=>{\n        setter(value);\n        let valid = true;\n        let errors = '';\n        if(value && !isEmail(value)){\n            valid = false;\n            errors=\"Votre email n'est invalide.\"\n        }\n        (!value || !password) && (valid = false);\n        setLoginErrors(errors);\n        setFormValid(valid);\n    }\n\n    return(\n        <div className=\"container\">\n            <p>par ici pour se connecter</p>\n            <p className=\"red-text\" style={{minHeight:25}}>{loginErrors}</p>\n            <form onSubmit={(e)=>{\n                e.preventDefault();\n                loginUser({variables:{email, password}});\n            }}>\n                <input\n                    placeholder=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e)=>{\n                        checkForm(e.target.value, setEmail);\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)}\n                />\n                <button className={`btn ${(!password || !email) && 'disabled'} login__validate`}>\n                    Valider\n                    <i className=\"material-icons left\">check</i>\n                </button>\n                <p className=\"login__switch\" onClick={()=>props.switchMode()}>Pas de compte? S'inscrire</p>\n\n            </form>\n        </div>\n    )\n    \n}\n","import gql from 'graphql-tag';\n\n\nexport const SIGNUP_USER = gql`\nmutation SignUp($email: String!, $password: String!, $name: String!){\n    signup(email: $email, password: $password, name: $name){\n        email\n        name\n    }\n}\n`;\n\nexport const MODIFY_USER = gql`\nmutation ModifyUser($icon: String!, $name: String!, $iconColor: String!){\n    modifyUser(name: $name, icon: $icon, iconColor: $iconColor){\n        icon,\n        iconColor,\n        name\n    }\n}\n`;\n\nexport const JOIN_GAME = gql`\nmutation JoinGame($gameId: ID!){\n    joinGame(gameId: $gameId){\n        id\n    }\n  }\n`;\n\nexport const LEAVE_GAME = gql`\nmutation LeaveGame($gameId: ID!){\n    leaveGame(gameId: $gameId){\n        id\n    }\n  }\n`;\n\nexport const SUBMIT_PAGE = gql`\nmutation SubmitPage($sketchbookId: ID!, $gameId: ID!, $content: String!, $pageType: String!){\n    submitPage(sketchbookId: $sketchbookId, gameId: $gameId, content: $content, pageType: $pageType){\n        id\n    }\n}\n`;\n\nexport const CHANGE_GAME_STATUS = gql`\nmutation ChangeGameStatus($newStatus:String!, $gameId: ID!){\n    changeGameStatus(gameId:$gameId, newStatus:$newStatus){\n      status\n      id\n    }\n  }\n`;\n\n","import React, {useState} from 'react';\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport {SIGNUP_USER} from '../../../graphQL/mutations';\nimport {isEmail, isLength} from 'validator';\nimport './Signup.css';\n\nexport default function SignUp(props){\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [signupErrors, setSignupErrors ]= useState('');\n    const [isFormValid, setFormValid] = useState(false);\n    const [signupUser, { loading, error }] = useMutation(SIGNUP_USER, {\n        onCompleted() {\n            window.location.reload()\n        }\n    });\n\n    const checkForm = (newValue, valueName, setter)=>{\n        setter(newValue);\n        let valid = true;\n        let errors = '';\n\n        if(valueName===\"email\" && !isEmail(newValue)){\n            valid = false;\n            errors=\"Votre email n'est invalide.\"\n        }\n        else if(valueName===\"password\" && !isLength(newValue, {min:6})){\n            valid = false;\n            errors=\"Choisissez un mot de passe de 6 charactères minimum.\"\n        }\n        else if(valueName===\"name\" && !isLength(newValue, {min:6})){\n            valid = false;\n            errors=\"Choisissez un nom de 6 charactères minimum.\"\n        }\n\n        (!email || !password || !name) && (valid = false);\n\n        setSignupErrors(errors);\n        setFormValid(valid);\n    }\n\n    return(\n        <div className=\"container\">\n            <p>se créer un compte</p>\n            <p className=\"red-text\" style={{minHeight:25}}>{signupErrors}</p>\n            <form \n                onSubmit={(e)=>{\n                e.preventDefault();\n                signupUser({variables:{email, password, name}});\n            }}>\n            <input\n                placeholder=\"nom\"\n                value={name}\n                onChange={(e)=>{checkForm(e.target.value, 'name', setName)}}\n            />\n            <input\n                placeholder=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e)=>{checkForm(e.target.value, 'email', setEmail)}}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"mot de passe\"\n                value={password}\n                onChange={(e)=>{checkForm(e.target.value, 'password', setPassword)}}\n            />\n\n            <button className={`btn ${!isFormValid && 'disabled'} signup__validate`}>\n                Valider\n                <i className=\"material-icons left\">check</i>\n            </button>\n            <p className=\"signup__switch\" onClick={()=>props.switchMode()}>Déjà un compte? Se connecter</p>\n\n        </form>\n        </div>\n    )\n}\n","import React from 'react';\n\nconst styles ={\n    red:{color:\"#F1012C\"},\n    orange:{color: \"#EE6402\"},\n    yellow:{color:\"#F8AF28\"},\n    green:{color: \"#69961F\"},\n    blue:{color: \"#62A6C4\"}\n}\n\nexport default function Sloggan(){\n    return(\n        <>\n            <span style={styles.red}>H</span>\n            <span style={styles.orange}>e</span>\n            <span style={styles.yellow}>y</span>\n            &nbsp;\n            <span style={styles.green}>O</span>\n            <span style={styles.blue}>h</span>\n            &nbsp;\n            <span style={styles.red}>L</span>\n            <span style={styles.orange}>e</span>\n            <span style={styles.yellow}>t</span>\n            <span style={styles.green}>'s</span>\n            &nbsp;\n            <span style={styles.blue}>D</span>\n            <span style={styles.red}>r</span>\n            <span style={styles.orange}>a</span>\n            <span style={styles.yellow}>w</span>\n            <span style={styles.green}>!</span>\n        </>\n    )\n}","import React,  {useState} from 'react';\nimport CrayonsBG from 'images/crayons.jpeg';\nimport {ReactComponent as Logo} from 'images/pencil.svg';\nimport './AuthPage.css';\nimport Login from 'layouts/AuthPage/Login';\nimport SignUp from 'layouts/AuthPage/Signup';\nimport Sloggan from 'components/Sloggan'\n\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\n\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n uri: process.env.NODE_ENV === \"development\" ? 'http://localhost:4000/graphql' : \"https://esquisse-api.herokuapp.com/graphql\"\n});\n \nconst client = new ApolloClient({\n cache,\n link\n});\n\n\nexport default function BasicHome(){\n    const [mode, setMode] = useState('login');\n    return(\n        <ApolloProvider client={client}>\n            <div className=\"auth-page\" style={{background: `url(${CrayonsBG})`}}>\n                <Logo className=\"auth-page__logo\"/>\n                <h3 className='auth-page__title'>Esquisse Live</h3>\n                <div className=\"auth-page__action\">\n                    <h5 className=\"center\">\n                        <Sloggan/>\n                    </h5>\n                    {\n                        mode===\"login\"\n                        ? <Login switchMode={()=>setMode('signup')}/>\n                        : <SignUp switchMode={()=>setMode('login')}/>\n                    }\n                </div>\n            </div>\n        </ApolloProvider>\n    )\n}","import gql from 'graphql-tag';\n\nexport const CURRENT_USER = gql`\n{\n    currentUser {\n        id\n        name\n        email\n        icon\n        iconColor\n    }\n  }\n`;\n\nexport const LAST_GAMES = gql`\n{\n    getLastUserGames{\n        id\n        sketchbooks{\n          pages{\n            content\n          }\n        }\n    }\n}\n`\n\nexport const GET_USER_ID = gql`\n{\n  userId @client\n}\n`;\n\nexport const GET_GAME_INFO= gql`\nquery GetGameInfo($gameId:ID!){\n    getGameInfo(gameId:$gameId){\n      id\n      status\n      turn\n      players{\n        id\n        name\n        icon\n        iconColor\n      }\n      creator\n      sketchbooks{\n        id\n      }\n    }\n  }\n`\n\nexport const GET_ALL_SKETCHBOOKS = gql`\nquery GetAllSketchbooks($gameId: ID!){\n    getAllSketchbooks(gameId:$gameId){\n        pages{\n            content\n            pageType\n            creator{\n                name\n            }\n        }\n    }\n}\n`;\n\nexport const GET_SKETCHBOOK_DETAILS = gql`\nquery GetSketchbookInfo($sketchbookId: ID!){\n    getSketchbookInfo(sketchbookId:$sketchbookId){\n        pages{\n            content\n            pageType\n        }\n    }\n}\n`;\n","import React from 'react';\nimport loader from 'images/loader.gif'\n\nconst styles={\n    loadingWrapper:{\n        display:'flex',\n        alignItems:'center',\n        height:'calc(100vh - 120px)'\n    },\n    loadingImage:{\n        maxWidth:\"100%\",\n        width:400,\n        margin:\"0 auto\"\n    }\n}\nexport default function Loading(){\n    return(\n        <div style={styles.loadingWrapper}>\n            <img src={loader} alt='loader' style={styles.loadingImage}/>\n        </div>\n    )\n};","import React from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport { useHistory } from \"react-router-dom\";\nimport gql from 'graphql-tag';\n\nconst CREATE_GAME = gql`\nmutation{\n    createGame{\n        id\n    }\n  }\n`;\n\nexport default function CreateGame(){\n    const history = useHistory();\n    const [createGame, {createGameData}] = useMutation(\n        CREATE_GAME,\n        {\n            onCompleted({createGame}){\n                history.push(`/game/${createGame.id}`)\n            }\n        }\n    )\n\n    return(\n        <>\n            <p>Envie de jouer?</p>\n            <button \n            onClick={()=>createGame()}\n            className=\"btn\">\n                NOUVELLE PARTIE\n            </button>\n        </>\n    )\n}","import gql from \"graphql-tag\";\n\nexport const IS_LOGGED_IN = gql`\n{\n    isLoggedIn @client\n  }\n`;\n\nexport const USER_ID = gql`\n{\n    userId @client\n  }\n`;\n\nexport const localType =gql`\nextend type Query {\n  isLoggedIn: Boolean!\n  userId: ID!\n}\n`\n\nexport const resolvers={};","import React, {useEffect} from 'react';\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {IS_LOGGED_IN} from '../graphQL/localState';\nimport { useHistory } from \"react-router-dom\";\n\nconst requireAuth = (WrappedComponent) => {\n    const HOC = (props)=>{\n        const { data } = useQuery(IS_LOGGED_IN);\n        let history = useHistory();\n\n        if(data.isLoggedIn){\n            return (\n                <WrappedComponent\n                    {...props}\n                />\n                );\n        }\n        else{\n            history.push('/');\n            return <></>\n        }\n    }\n    return HOC;\n};\n\nexport default requireAuth;","import React from 'react';\nimport {useQuery} from '@apollo/react-hooks';\nimport {LAST_GAMES} from 'graphQL/queries';\nimport {Link} from 'react-router-dom';\nimport gearLoader from 'images/gearLoader.gif'\nimport './LastGames.css';\n\nexport default function LastGames(){\n    const { data, loading, error } = useQuery(LAST_GAMES,\n        {\n            fetchPolicy:\"network-only\"\n        });\n\n    return(\n        <div className=\"last-games\">\n            <p>VOTRE DERNIÈRE PARTIE</p>\n            <i>attention les parties sont effacées toutes les 30mn</i>\n            {\n                loading &&\n                <div>\n                    <img className=\"last-games__loader\" src={gearLoader}/>\n                </div>\n\n            }\n            {\n                data && data.getLastUserGames.length>0\n                ? data.getLastUserGames.map((game, index)=>{\n                    return(\n                        <div className=\"last-games__game-wrapper\"\n                        key={index}\n                        >\n                        <Link to={\"/game/\"+game.id}>\n                            <div className=\"last-games__game-border\">\n                                <div className=\"last-games__title\">\n                                    <span>Voir la partie</span>\n                                    <i className=\"material-icons\">remove_red_eye</i>\n                                </div>\n                                <div>\n                                    {\n                                        game.sketchbooks.map((sketchbook, index)=> <span key={index}>{(index!==0) && \" /\"} {sketchbook.pages[0].content}</span> )\n                                    }\n                                </div>\n                            </div>\n                        </Link>\n                        </div>\n                    )\n                })\n                :<p>aucune partie disponible</p>\n            }\n        </div>\n    )\n}","import React from 'react';\nimport {useQuery, useApolloClient} from '@apollo/react-hooks';\nimport {CURRENT_USER} from 'graphQL/queries';\nimport './Home.css';\nimport Loading from 'components/Loading';\nimport CreateGame from 'components/GameControls/CreateGame';\nimport {Link} from 'react-router-dom';\nimport requireAuth from 'components/requireAuth';\nimport LastGames from 'components/LastGames';\n\nfunction Home(){\n    const client = useApolloClient();\n    const { data, loading, error } = useQuery(CURRENT_USER);\n\n    if(loading) return <Loading/>\n\n    const user = data && data.currentUser\n\n\n    return(\n        <div className=\"center connected-home\">\n            <i className=\"material-icons large connected-home__icon\" style={{color: user.iconColor, borderColor: user.iconColor}}>{user.icon}</i>\n            <h5>Bienvenue</h5>\n            <h4>{user.name}</h4>\n            <p>Profil</p>\n            <Link to=\"/profile\" className=\"btn\">\n                Modifier Mon profil\n            </Link>\n            <CreateGame/>\n            <LastGames/>\n        </div>\n    )\n}\n\nexport default requireAuth(Home);","import React from 'react';\nimport './ProfileItems.css';\n\nconst availableIcons = [\n    \"tag_faces\", \"accessibility\", \"adb\", \"airline_seat_recline_extra\", \"airport_shuttle\", \"album\", \"android\", \"announcement\", \"assistant\", \"attach_file\", \"audiotrack\", \"beach_access\", \"brightness_2\", \"brightness_low\", \"build\", \"bug_report\", \"cake\", \"casino\", \"child_care\", \"content_cut\", \"directions_bike\", \"directions_run\", \"face\", \"favorite_border\", \"grade\", \"hot_tub\", \"local_bar\", \"local_dining\", \"local_florist\", \"mood_bad\", \"rowing\", \"sentiment_neutral\", \"sentiment_very_dissatisfied\", \"smoking_rooms\", \"wc\"\n]\n\nexport default function IconSelector({selectedIcon, setIcon}){\n    return(\n        <div className=\"icon-selector\">\n            {\n                availableIcons.map((icon, index)=>\n                <i \n                    key={index}\n                    className={`material-icons small ${selectedIcon===icon && 'selected-icon'}`}\n                    onClick = {()=>{setIcon(icon)}}\n                >\n                    {icon}\n                </i>\n                )\n            }\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport requireAuth from '../../../components/requireAuth';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {CURRENT_USER} from '../../../graphQL/queries';\nimport {MODIFY_USER} from '../../../graphQL/mutations';\nimport IconSelector from '../../../components/ProfileItems/IconSelector';\nimport { CirclePicker } from 'react-color';\nimport './Profil.css';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Profil = ()=>{\n    const [icon, setIcon] = useState('tag_faces');\n    const [iconColor, setIconColor] = useState('black-text');\n    const [name, setName] = useState('');\n    let history = useHistory();\n\n    const { data, loading, error } = useQuery(\n        CURRENT_USER,\n        { fetchPolicy: \"network-only\", \n            onCompleted(data) {\n                setName(data.currentUser.name)\n                setIcon(data.currentUser.icon || 'tag_faces')\n                setIconColor(data.currentUser.iconColor || 'blue-text')            \n            }\n        }\n    );\n\n    const [modifyUser , {modifyData}] = useMutation(MODIFY_USER, {\n        variables: {name, icon, iconColor},\n        onCompleted(response){\n            history.push('/')\n        },\n        refetchQueries: [{\n            query: CURRENT_USER\n        }]\n    })\n\n    \n    if(loading) return <></>\n\n    return(\n        <div className=\"container profile\">\n            <div className=\"row\">\n                <div className=\"col s6 center\">\n                    <i className={`material-icons large ${iconColor}`}\n                    style={{color:iconColor}}\n                    >{icon}</i>\n                </div>\n                <div className=\"col s6\">\n                    <h4>Mon Profil</h4>\n                    <input\n                        placeholder=\"nom\"\n                        value={name}\n                        onChange={(e)=>setName(e.target.value)}\n                        maxLength={20}\n                    />\n                </div>\n                <div>\n                    <p>Mon avatar</p>\n                    <IconSelector\n                        setIcon={setIcon}\n                        selectedIcon={icon}\n                    />\n                    <p>Couleur</p>\n                    <CirclePicker\n                        onChange={ (color, event)=>setIconColor((color.hex))}\n                    />\n                </div>\n                <div className=\"center profil__save-btn\">\n                    <button \n                    className=\"btn\"\n                    onClick = {()=>modifyUser()}\n                    >Enregistrer</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default requireAuth(Profil);","import React from 'react';\nimport './Modal.css';\n\nexport default function Modal(props){\n    return(\n        <div className={`modal-wrapper ${props.open && 'open'}`}>\n            <div className=\"sketchbook-display__wrapper modal\">\n                {props.children}\n            </div>\n        <div className=\"modal-overlay\" onClick={()=>props.closeModal()}></div>\n    </div>\n\n    )\n}","import React from 'react';\nimport './SketchbookDisplay.css';\nimport CanvasDraw from \"react-canvas-draw\";\n\n\nexport default function SketchbookDisplay({sketchbook}){\n    const initialCreator = sketchbook.pages[0].creator.name\n    const initialWord = sketchbook.pages[0].content\n    const restOfPages = sketchbook.pages.slice(1)\n    return(\n        <div>\n            <div className=\"\">\n                <h4>{initialWord}</h4>\n                <p>proposé par {initialCreator}</p>\n            </div>\n            <div className=\"\">\n                {\n                    restOfPages.map(\n                        (page, index)=>{\n                            if(page.pageType===\"drawing\"){\n                                return(\n                                <div \n                                key={index}\n                                >\n                                    <hr/>                                                                <p>Le dessin de {page.creator.name}</p>\n                                    <CanvasDraw\n                                        className=\"sketchbook__drawing\"\n                                        disabled\n                                        hideGrid\n                                        loadTimeOffset={0}\n                                        saveData={page.content}\n                                        hideInterface={true}\n                                    />\n                                </div>   \n                                )              \n                            }\n                            else{\n                            return(\n                                <div key={index}>\n                                    <hr/>\n                                    <p>L'interprétation de {page.creator.name}</p>\n                                    <p>{page.content}</p>\n                                </div>\n                            )\n                            }\n                        }\n                    )\n                }\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport {useQuery} from '@apollo/react-hooks';\nimport endGif from 'images/artist.gif';\nimport Loading from 'components/Loading';\nimport Modal from 'components/Modal';\nimport SketchbookDisplay from 'components/SketchbookDisplay';\nimport {GET_ALL_SKETCHBOOKS} from 'graphQL/queries';\nimport './Game.css';\nimport {Link} from 'react-router-dom';\n\n\nconst GameOver = ({gameId})=>{\n    const [sketchbook, setSketchbook] = useState();\n    const [openedModal, setOpenedModal] = useState(false);\n    const {data, loading, error} = useQuery(GET_ALL_SKETCHBOOKS, {\n        variables:{gameId}\n    })\n\n    if(loading) return <Loading/>\n    const sketchbooks = data && data.getAllSketchbooks\n    return(\n        <div className=\"center\">\n            <h2>NOICE!</h2>\n            <p>Le jeu est maintenant terminé.</p> \n            <p>Découvrez ci dessous les performances artistiques de vos amis!</p>\n            <div><Link to={\"/pdf/\"+gameId}><button className=\"btn game-over__pdf-btn\">Par ici pour la version pdf</button></Link></div>\n            <img className=\"game-over__gif\" src={endGif} alt=\"artist\"/>\n            <div>\n                {\n                sketchbooks &&\n                sketchbooks.map((sketchbook, index)=>{\n                    return(\n                        <div key={index} className=\"game-over__result-bnt-wrapper\">\n                            <button \n                            className=\"btn game-over__result-btn\" \n                            onClick={()=>{\n                                setSketchbook(sketchbook);\n                                setOpenedModal(true)\n                            }}\n                            >{sketchbook.pages[0].creator.name} - {sketchbook.pages[0].content}</button>\n                        </div>\n                    )\n                })\n                }\n            </div>\n            {\n                sketchbook &&\n                <Modal\n                    open={openedModal}\n                    closeModal={()=>{\n                        setOpenedModal(false); setSketchbook();\n                    }}\n                >\n                    <SketchbookDisplay \n                        sketchbook={sketchbook}\n                    />\n                </Modal>\n            }\n        </div>\n    )\n}\n\n\n\nexport default GameOver;","import React from 'react';\n\nexport default function PlayerItem({player, admin}){\n    return(\n        <>\n            <li className=\"collection-item\">\n                <i className=\"material-icons\" style={{color: player.iconColor}}>{player.icon}</i>\n                <span>{player.name}</span>  {admin && <span> - GAME MASTER</span>}\n            </li>\n        </>\n    )\n}","import React, {useState} from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport './Controls.css';\nimport {CHANGE_GAME_STATUS} from 'graphQL/mutations';\n\n\n\n\n\nexport default function AdminGameControls({gameId, players}){\n    const [launchGame, { loading, error }] = useMutation(CHANGE_GAME_STATUS, {variables:{gameId, newStatus:\"active\"}})\n    const [copied, setCopied] = useState(false)\n    if(loading) return <div></div>\n    return(\n        <> \n            <div className=\"center\">\n                <div className=\"admin-controls__share-link\">\n                    <p>Votre partie a bien été créée. Invitez vos amis à la rejoindre en partageant le lien ci-dessous.</p>\n                    <p>LIEN A PARTAGER AVEC LES AUTRES JOUEURS (CLIQUEZ POUR COPIER)</p>\n                    <p className=\"admin-control__info\">{copied && \"lien copié dans le presse papier\"}</p>\n                    <CopyToClipboard text={window.location.href}\n                        onCopy={() =>setCopied(true)}>\n                        <p className=\"btn\">{window.location.href}</p>\n                    </CopyToClipboard>\n                </div>\n                <div>\n                {\n                    players.length>2\n                    ? <><p>Prêts à commencer?</p><button className=\"btn\" onClick={()=>launchGame()}>LANCER LE JEU</button></>\n                    : <p>Un minimum de 3 joueurs est nécessaire pour lancer le jeu.</p>\n                }\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react'\n\nexport default function PlayerControls({joinGame, hasJoined, players, loading}){\n    const displayMessage = () =>{\n        if(!hasJoined){\n            if(!loading){\n                return(\n                    <>\n                        <p>Vous avez été invité à jouer à une partie de esquissé, cliquez sur le bouton ci dessous pour rejoindre les participants :</p>\n                        <button onClick={()=>joinGame()} className=\"btn\">REJOINDRE LA PARTIE</button>\n                    </>\n                )\n            }\n            else{\n                return <p>Connexion en cours</p>\n            }\n        }\n        else{\n            if(players.length<3){\n                return <p>Vous avez rejoint la partie, un nombre minimal de 3 joueurs est nécessaire pour jouer.</p>\n            }\n            else{\n                return <p>Vous avez rejoint la partie, nous attendons que le game master lance la partie.</p>\n            }\n        }\n    }\n\n    return(\n        <div className=\"centered\">\n            {displayMessage()}\n        </div>\n    )\n}","import gql from 'graphql-tag';\n\nexport const GAME_UPDATE = gql`\nsubscription GameUpdate($gameId:ID!){\n    gameUpdate(gameId:$gameId){\n      status\n      creator\n      turn\n      players{\n        id\n        name\n        icon\n        iconColor\n      }\n      sketchbooks{\n        id\n      }\n    }\n  }\n`\n\nexport const PLAYER_UPDATE_SUBSCRIPTION = gql`\nsubscription PlayerUpdate($gameId: ID!) {\n  playerUpdate(gameId:$gameId){\n      players{\n          id\n          name\n          icon\n          iconColor\n      }\n      creator\n  }\n}\n`;\n\nexport const TIME_TO_SUBMIT = gql`\n  subscription TimeToSubmit($gameId: ID!){\n    timeToSubmit(gameId:$gameId){\n      id\n    }\n  }\n`;","import React, {useState, useEffect} from 'react';\nimport PlayerItem from 'components/PlayerItem';\nimport AdminGameControls from 'components/GameControls/AdminGameControls';\nimport PlayerControls from 'components/GameControls/PlayerControls';\nimport {JOIN_GAME, LEAVE_GAME} from 'graphQL/mutations';\nimport {useMutation, useSubscription, useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport { CURRENT_USER } from 'graphQL/queries';\nimport {PLAYER_UPDATE_SUBSCRIPTION} from 'graphQL/subscriptions'\n\n\n\n\nconst NewGame = ({gameId, playerslist, creatorId})=>{\n    const [creator, setCreator] = useState(creatorId);\n    const [players, setPlayers] = useState([...playerslist]);\n    const {data: {currentUser}} = useQuery(CURRENT_USER)\n    const [joinGame, { loading, error }] = useMutation(JOIN_GAME, {variables:{gameId}})\n    const [leaveGame] = useMutation(LEAVE_GAME, {variables:{gameId}})\n    const { data, loadingSub } = useSubscription(\n        PLAYER_UPDATE_SUBSCRIPTION, {variables:{gameId},\n        onSubscriptionData: ({client, subscriptionData})=>{\n            setPlayers(subscriptionData.data.playerUpdate.players)\n            setCreator(subscriptionData.data.playerUpdate.creator)\n        }\n        }\n    );\n\n    \n    const isGameAdmin = (currentUser.id === creator)\n    const hasJoined = players.map(player=>player.id).indexOf(currentUser.id)>-1\n\n    const renderPlayers = ()=>{\n        return(\n            <ul className=\"collection\">\n                {players.map((player, index)=><PlayerItem key={index} player={player} admin={player.id === creator}/>)}\n            </ul>\n        )\n    }\n\n\n    return(\n        <div>\n            <h4>Nouvelle partie</h4>\n            {isGameAdmin && <AdminGameControls gameId={gameId} players={players}/>}\n            {!isGameAdmin && <PlayerControls joinGame={joinGame} loading={loading} players={players} hasJoined={hasJoined}/>}\n                 <div>\n                <p>Liste des joueurs connectés à cette partie</p>\n                    {   players.length>0\n                        ?renderPlayers()\n                        : <i>Aucun joueur connecté</i> \n                    }\n            </div>\n        </div>\n    )\n}\n\nexport default NewGame;","import React, {useEffect} from 'react';\nimport Counter from 'react-countdown';\n\nexport default function Countdown({timer, submiter}){\n    const counterAspect = ({ hours, minutes, seconds}) => {\n        return(\n            <p>\n                <i className=\"material-icons small\">access_alarm</i>\n                <span>{hours}:{minutes}:{seconds}</span>\n            </p>\n        )\n      };\n    return(\n    <div style={{fontSize:\"2rem\"}}>\n        <Counter \n        date={Date.now() + timer} \n        renderer={counterAspect}\n        onComplete={()=>submiter()}\n        />\n    </div>\n    )\n}","import React from 'react';\nimport GearLoader from 'images/gearLoader.gif';\nimport './StopGame.css';\n\nexport default function StopGame(){\n    return(\n        <div className=\"stopGame\">\n            <div className=\"stopGame__content\">\n                <h4>HAUT LES MAINS</h4>\n                <p>Le timer est écoulé votre réponse a été envoyée. Ne touchez à rien la page se mettra automatiquement à jour une fois toutes les réponses reçues.</p>\n                <h5>synchronisation de la partie en cours</h5>\n                <img className=\"stopGame__loader\" src={GearLoader} alt='gear loader'/>\n            </div>\n            <div className=\"stopGame__overlay\"></div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport Countdown from 'components/Counter/Countdown';\nimport StopGame from 'components/StopGame';\nimport {TIME_TO_SUBMIT} from 'graphQL/subscriptions';\nimport {useSubscription} from '@apollo/react-hooks';\nimport {useParams} from 'react-router-dom';\n\nconst applyCountdown = (WrappedComponent) => {\n    const HOC = (props)=>{\n        const {gameId} = useParams();\n        const [finished, setFinished] = useState(false);\n        const [submit, setSubmit] = useState(false);\n\n        const timeToSubmit = useSubscription(\n            TIME_TO_SUBMIT, {variables:{gameId},\n            onSubscriptionData: ({client, subscriptionData})=>{\n                console.log('TIME TO SUBMIT')\n                setSubmit(true)\n            }\n            }\n        );\n\n        const renderCounter=()=>{\n            return(\n                !finished\n                ?<Countdown \n                timer={props.timer} \n                submiter={()=>setFinished(true)}/>\n                :<StopGame/>\n\n            )\n        }\n        return (\n            <>\n            <div className=\"center\">\n                {renderCounter()}\n            </div>\n            <WrappedComponent\n                {...props}\n                finished={submit}\n            />\n            </>\n        );\n    }\n    return HOC;\n};\n\nexport default applyCountdown;\n\n","import React, { useState, useEffect } from 'react';\nimport CanvasDraw from \"react-canvas-draw\";\nimport applyCountdown from 'components/Counter/applyCountdown';\nimport {SUBMIT_PAGE} from 'graphQL/mutations';\nimport {useMutation} from '@apollo/react-hooks';\n\nimport './GuessingMode.css';\n\nconst GuessingPanel = ({lastPage, finished, sketchbookId, gameId})=>{\n    const [content, setContent] = useState('')\n    const pageType = 'guessing';\n    const [submitPage, {loading, error}]= useMutation(SUBMIT_PAGE, {\n        variables :{\n            content,\n            pageType,\n            gameId,\n            sketchbookId\n        },\n        onCompleted:()=>{\n            console.log('PAGE SUBMITTED FOR SKETCHBOOK', sketchbookId, \"with content \", content)\n        }\n    });\n\n    window.onbeforeunload = function(){\n        console.log('LEAVING PAGE')\n        submitPage()\n    };\n\n    useEffect(() => {\n        if(finished){\n            submitPage()\n        }\n    }, [finished]);\n\n        return(\n            <div className=\"center\">\n                <p>LE DESSIN A INTERPRETER</p>\n                <CanvasDraw\n                className=\"guessing-mode__canvas\"\n                disabled\n                hideGrid\n                loadTimeOffset={0}\n                saveData={lastPage.content}\n                hideInterface={true}\n                />\n                <p>Le mot deviné :</p>\n                <form>\n                    <input\n                        placeholder=\"Je vois je vois...\"\n                        disabled={finished}\n                        onChange={e=>setContent(e.target.value)}\n                    />\n                </form>\n          </div>\n        )\n\n}\n\nexport default applyCountdown(GuessingPanel);","import React from 'react';\nimport { CirclePicker } from 'react-color';\n\nexport default function DrawingTools({setBrushColor, setBrushRadius, brushRadius}){\n    return(\n        <div className=\"row center drawing-tools\">\n            <div className=\"col s12 m8\">\n                <p>Couleur du crayon</p>\n                <CirclePicker \n                onChange={ (color, event)=>setBrushColor(color.hex) }/>\n            </div>\n\n            <div className=\"col s12 m4\">\n                <p>Taille du crayon</p>\n                <div className={`btn-floating waves-effect waves-light icon ${brushRadius===1 && 'disabled'}`}>\n                    <i className=\"material-icons\"\n                    onClick={()=>setBrushRadius(brushRadius-1)}\n                    >\n                        remove\n                    </i>\n                </div>\n                <span className=\"brush-size\">\n                    {brushRadius}\n                </span>\n                <div className={`btn-floating waves-effect waves-light icon ${brushRadius===10 && 'disabled'}`}>\n                    <i className=\"material-icons\"\n                    onClick={()=>setBrushRadius(brushRadius+1)}\n                    >\n                        add\n                    </i>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './Drawing.css';\n\nexport default function DrawingControls({content}){\n    return(\n        <div className=\"drawing-controls center\">\n            <div\n                className=\"waves-effect waves-light btn red\"\n                onClick={() => {content.clear();}}\n            >\n                <i className=\"material-icons left\">delete_forever</i>\n                Effacer\n            </div>\n            {/* <div className=\"waves-effect waves-light btn\"\n                onClick={() => {\n                    localStorage.setItem(\n                    \"savedDrawing\",\n                    props.saveableCanvas.getSaveData()\n                    );\n                }}\n            >\n                    <i className=\"material-icons left\">send</i>\n                    Envoyer\n            </div> */}\n\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport CanvasDraw from \"react-canvas-draw\";\nimport DrawingTools from './DrawingTools';\nimport DrawingControls from './DrawingControls';\nimport applyCountdown from 'components/Counter/applyCountdown';\nimport {SUBMIT_PAGE} from 'graphQL/mutations';\nimport {useMutation} from '@apollo/react-hooks';\nimport './Drawing.css';\n\n\nconst DrawingMode=({lastPage, finished, gameId, sketchbookId})=>{\n    const [brushColor, setBrushColor]=useState(\"#2196f3\");\n    const [brushRadius, setBrushRadius]=useState(2);\n    const [content, setContent]=useState('');\n\n    const pageType = 'drawing';\n    const [submitPage, {loading, error}]= useMutation(SUBMIT_PAGE, {\n        variables :{\n            content: content && content.getSaveData(),\n            pageType,\n            gameId,\n            sketchbookId\n        },\n        onCompleted:()=>{\n            console.log('PAGE SUBMITTED FOR SKETCHBOOK', sketchbookId, \"with content \", content)\n        }\n    });\n\n    window.onbeforeunload = function(){\n        console.log('LEAVING PAGE')\n        submitPage()\n    };\n\n    useEffect(() => {\n        if(finished){\n            submitPage()\n        }\n    }, [finished]);\n\n        return(\n            <div>\n                <div className=\"center\">\n                    <p>LE MOT A DESSINER EST</p>\n                    <h3>{lastPage.content}</h3>\n                </div>\n                <DrawingTools\n                    setBrushColor={setBrushColor}\n                    setBrushRadius={setBrushRadius}\n                    content={content}\n                    brushRadius={brushRadius}\n                />\n                <DrawingControls\n                    content={content}\n                />\n                <CanvasDraw\n                    ref={canvasDraw => setContent(canvasDraw)}\n                    brushRadius= {brushRadius}\n                    lazyRadius={2}\n                    brushColor={brushColor}\n                    className=\"drawing-mode__canvas\"\n                    disabled={finished}\n                    hideGrid={finished}\n                />\n                \n            </div>\n        )\n}\n\nexport default applyCountdown(DrawingMode)","import React, {useState, useEffect} from 'react';\nimport applyCountdown from 'components/Counter/applyCountdown';\nimport {useMutation} from '@apollo/react-hooks';\nimport {SUBMIT_PAGE} from 'graphQL/mutations';\n\n\nconst InitMode = ({finished, gameId, sketchbookId})=>{\n    const pageType = 'init';\n    const [content, setContent] = useState('');\n    const [submitPage, {loading, error}]= useMutation(SUBMIT_PAGE, {\n        variables :{\n            content,\n            pageType,\n            gameId,\n            sketchbookId\n        },\n        onCompleted:()=>{\n            console.log('PAGE SUBMITTED FOR SKETCHBOOK', sketchbookId, \"with content \", content)\n        }\n    });\n\n    useEffect(() => {\n        if(finished){\n            submitPage()\n        }\n    }, [finished]);\n\n\n    window.onbeforeunload = function(){\n        console.log('LEAVING PAGE')\n        submitPage()\n      };\n\n    return(\n        <>\n            {\n                !finished\n                ?<p>Indiquez un mot pour commencer la partie</p>\n                : <p>Votre mot a été enregistré</p>\n            }\n            <input\n            placeholder=\"Mot Initial\"\n            type=\"text\"\n            value={content}\n            onChange={e=>setContent(e.target.value)}\n            disabled={finished}\n            />\n        </>\n    )\n}\n\nexport default applyCountdown(InitMode)","import React from 'react';\nimport Sherlock from 'images/sherlock.png';\nimport './SubmitMode.css';\n\nexport default function Modal(props){\n    return(\n        <div className=\"center submit-mode\">\n            <h3>Pas si vite l'ami!</h3>\n            <p>Après enquête on dirait bien que vous avez déjà envoyé votre réponse...</p> \n            <p>Attendez que tout le monde ai répondu pour continuer le jeu, ne touchez à rien la page se rechargera toute seule.</p>\n            <img src={Sherlock} alt=\"detective\"/>\n        </div>\n\n    )\n}","import React from 'react';\nimport {useParams} from 'react-router-dom';\nimport GuessingMode from 'components/GameModes/GuessingMode';\nimport DrawingMode from 'components/GameModes/DrawingMode';\nimport InitMode from 'components/GameModes/InitMode';\nimport SubmitMode from 'components/GameModes/SubmitMode';\n\nconst timers ={\n    \"init\":60000,\n    \"drawing\":60000,\n    \"guessing\":60000,\n    \"loading\":0\n}\n\nexport default function GameMode({pages, sketchbookId, turn}){\n    const {gameId} = useParams();\n    const getGameMode = ()=>{\n        let mode = \"loading\";\n        if(pages.length===0){\n            mode = \"init\";\n        }\n        else if(pages.length>0 && pages.length<=turn){\n            return pages[pages.length-1].pageType===\"drawing\"\n            ? \"guessing\"\n            : \"drawing\"\n        }\n        else{\n            mode = \"submitted\"\n        }\n        return mode\n    }\n\n    const lastPage = pages.length>0 ? pages[pages.length-1] : {}\n    const gameMode = getGameMode()\n    const gameProps = {\n        timer: timers[gameMode],\n        gameId,\n        sketchbookId,\n        lastPage\n    }\n    \n    const selectGameDisplay = ()=>{\n        if(gameMode==\"init\"){\n            return <InitMode \n            {...gameProps}\n            />\n        }\n        else if(gameMode===\"drawing\"){\n            return <DrawingMode \n            {...gameProps}\n            />\n        }\n        else if(gameMode===\"guessing\"){\n            return <GuessingMode \n            {...gameProps}\n            />\n        }\n        else{\n            return <SubmitMode/>\n        }\n    }\n\n    return(\n        <div>\n            {selectGameDisplay()}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport requireAuth from 'components/requireAuth';\nimport {useQuery} from '@apollo/react-hooks';\nimport Loading from 'components/Loading';\nimport {GET_SKETCHBOOK_DETAILS} from 'graphQL/queries';\nimport GameModes from 'components/GameModes';\n\n\n\n\nconst ActiveGame = ({gameInfo, userId})=>{\n    const turn = gameInfo.turn\n    const [pages, setPages] = useState({});\n\n    const getSketchbookId = ()=>{\n        let sketchbookId=\"\"\n        if(gameInfo.players){\n            const playersIds = gameInfo.players.map(player=>player.id)\n            const nextIndex = playersIds.indexOf(userId)+turn\n            const sketchbooksMaxIndexes = gameInfo.sketchbooks.length-1;\n            const newIndex = (nextIndex>sketchbooksMaxIndexes) ? (nextIndex-sketchbooksMaxIndexes-1) : nextIndex\n            sketchbookId = gameInfo.sketchbooks.map(sketchbook=>sketchbook.id)[newIndex]\n        }\n        return sketchbookId\n    }\n    const sketchbookId = getSketchbookId();\n\n    const {data, loading, error} =useQuery(\n        GET_SKETCHBOOK_DETAILS,\n        {\n            variables: {\n                sketchbookId\n            },\n            fetchPolicy:'network-only',\n            onCompleted({getSketchbookInfo}){\n                setPages(getSketchbookInfo.pages)\n            },\n            onError(...error) {\n                console.log(error)\n            }\n        }\n    );\n\n    if(loading) return <Loading/>\n\n    return(\n        <div className=\"container\">\n            {\n                <GameModes\n                    pages={pages}\n                    sketchbookId={sketchbookId}\n                    turn={turn}\n                />\n            }\n        </div>\n    )\n}\n\nexport default requireAuth(ActiveGame);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Wrong from 'images/wrong.png'\n\nexport default function NothingToSee(){\n    return(\n        <div className=\"center\">\n            <h3>Rien à voir ici circulez!</h3>\n            <p>Cette partie a été abandonnée vous ne pouvez pas y accéder.</p>\n            <div>\n                <img src={Wrong} alt=\"stop\"/>\n            </div>\n            <Link to=\"/\">\n                <button className=\"btn\">Revenir à la civilisation</button>\n            </Link>\n        </div>\n    )\n}","import React from 'react';\nimport Lapin from 'images/lapin.png'\n\nconst styles={\n    illustration:{\n        width:\"100%\",\n        maxWidth:300,\n        marginTop:30\n    },\n    marginNull:{\n        margin:0\n    },\n    pageWrapper:{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        height: \"calc(100vh - 90px)\"\n    }\n}\n\nexport default function OnGoingGame(){\n    return(\n        <div class=\"center\" style={styles.pageWrapper}>\n            <h3>Vous êtes en retard!</h3>\n            <p>Cette partie a déjà commencé vous ne pouvez plus la rejoindre.</p>\n            <p style={styles.marginNull}> Attendez la fin pour découvrir les résultats.</p>\n            <img style={styles.illustration} src={Lapin} alt='lapin'/>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport GameOver from './GameOver';\nimport NewGame from './NewGame';\nimport ActiveGame from './ActiveGame';\nimport {useParams} from 'react-router-dom';\nimport {useQuery, useSubscription, useMutation} from '@apollo/react-hooks';\nimport requireAuth from 'components/requireAuth';\nimport Loading from 'components/Loading';\nimport {GET_GAME_INFO, GET_USER_ID} from 'graphQL/queries';\nimport {LEAVE_GAME} from 'graphQL/mutations';\nimport {GAME_UPDATE, SUBMIT_UPDATE} from 'graphQL/subscriptions';\nimport NothingToSee from 'components/NothingToSee';\nimport OnGoingGame from './OnGoingGame';\n\n\nconst Game = (props)=>{\n    const {gameId} = useParams();\n    const [gameInfo, setGameInfo] = useState({})\n    const user = useQuery(GET_USER_ID).data\n    const userId = user && user.userId\n    const [leaveGame] = useMutation(LEAVE_GAME, {variables:{gameId}, refetchQueries: [{\n        query: GET_GAME_INFO,\n        variables: {gameId}\n    }]})\n\n\n    const { data, loading, error } = useQuery(\n        GET_GAME_INFO,\n        { variables: {gameId},\n            onCompleted({getGameInfo}){\n                console.log(\"GET_GAME_INFO \", getGameInfo)\n                setGameInfo(getGameInfo)\n            },\n            fetchPolicy:'network-only',\n            onError(...error) {\n              console.log(error)\n            }\n        }\n    );\n\n    const { dataSub, loadingSub } = useSubscription(\n        GAME_UPDATE, {variables:{gameId},\n        onSubscriptionData: ({client, subscriptionData})=>{\n            console.log('GAME UPDATED INFO ', subscriptionData.data.gameUpdate)\n            setGameInfo({...gameInfo, ...subscriptionData.data.gameUpdate})\n        },\n        onError(...error) {\n          console.log(error)\n        }\n        }\n    );\n\n    useEffect(() => {\n        return function cleanup() {\n            console.log(\"LEAVING GAME!\")\n            leaveGame()\n        };\n      }, []);\n\n    if(loading) return <Loading/>\n\n    const selectGameStatus = ({status})=>{\n        if(status===\"new\"){\n            return <NewGame \n            gameId={gameId} \n            playerslist={gameInfo.players}\n            creatorId={gameInfo.creator}\n            />\n        }\n        else if(status===\"active\" && gameInfo.players.map(player=>player.id).indexOf(userId)>-1){\n            return <ActiveGame\n                gameInfo={gameInfo}\n                userId={userId}\n            />\n        }\n        else if(status===\"active\"){\n            return <OnGoingGame/>\n        }\n        else if(status===\"over\"){\n            return <GameOver\n            gameId={gameId} \n            sketchbooks={gameInfo.sketchbooks}\n            />\n        }\n        else if(status==\"abandonned\"){\n            return <NothingToSee/>\n        }\n    }\n\n    return(\n        <div className=\"container\">\n            {gameInfo && selectGameStatus(gameInfo)}\n        </div>\n    )\n}\n\nexport default requireAuth(Game);","import React from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport {useHistory} from 'react-router-dom';\n\nexport default function LogoutButton() {\n  const client = useApolloClient();\n  const history = useHistory();\n  return (\n    <li\n      onClick={() => {\n        client.writeData({ data: { isLoggedIn: false, userId: null } });\n        localStorage.clear();\n        window.location.reload();\n        history.push('/');\n      }}\n    >\n        <a>\n           <i className=\"material-icons\">exit_to_app</i>\n        </a>\n    </li>\n  );\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport LogoutButton from '../../components/LogoutBtn';\nimport './Header.css';\nimport requireAuth from 'components/requireAuth';\nimport {CURRENT_USER} from 'graphQL/queries';\nimport {useQuery} from '@apollo/react-hooks';\n\n\n\nexport default requireAuth(function Header(){\n    const {data, loading, error}= useQuery(CURRENT_USER);\n    const name = data && data.currentUser.name\n        return(\n            <nav>\n            <div className=\"nav-wrapper\">\n                <Link to=\"/\" className=\"brand-logo left\">\n                    <span className=\"nav__title\">Esquisse Live</span>\n                    <i className=\"material-icons\">brush</i>\n                 </Link>\n                <ul className=\"right nav__right-menu\">\n                    <LogoutButton/>\n                    <span>hello {name}</span>\n                </ul>\n            </div>\n        </nav>\n        )   \n})\n\n\n\n","import React from 'react';\nimport {useQuery, useApolloClient} from '@apollo/react-hooks';\nimport {CURRENT_USER} from 'graphQL/queries';\nimport Header from 'components/Header';\n\nexport default function ConnectedPageContainer(props){\n    const client = useApolloClient();\n    const { data, loading, error } = useQuery(\n        CURRENT_USER,\n        {\n            onCompleted({currentUser}){\n                client.writeData({\n                    data:{\n                        userId:currentUser.id,\n                    }\n                })\n            }\n        }\n    );\n    return(\n        <>\n        <Header/>\n        <div>{props.children}</div>\n        </>\n    )\n}","import React from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useQuery} from '@apollo/react-hooks';\nimport {GET_ALL_SKETCHBOOKS} from 'graphQL/queries';\nimport Loading from 'components/Loading';\nimport SketchbookDisplay from 'components/SketchbookDisplay';\nimport './PdfFormat.css'\n\nexport default function PdfFormat(){\n    const {gameId} = useParams();\n    const {data, loading, error} = useQuery(GET_ALL_SKETCHBOOKS, {\n        variables:{gameId}\n    })\n\n    if(loading) return <Loading/>\n    return(\n        <div className=\"pdf-format center container\">\n            <h4>Une si belle partie!</h4>\n            <h5>avec la participation de  {data && data.getAllSketchbooks.map((sketchbook, index)=><span key={index}> {sketchbook.pages[0].creator.name} </span>)}</h5>\n            <p>cliquez sur options/imprimer/version-pdf dans votre navigateur pour garder un souvenir</p>\n            {\n                data && data.getAllSketchbooks.map(\n                    (sketchbook, index)=>{\n                        return(\n                            <div key={index} className=\"pdf-format__sketchbook\">\n                                <h4>carnet n°{index+1}</h4>\n                                <SketchbookDisplay sketchbook={sketchbook}/>\n                            </div>\n                        )\n                    }\n                )\n            }\n        </div>\n    )\n}","import React from 'react';\nimport {\n    HashRouter,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport Home from './Home';\nimport Profile from './Profile';\nimport Game from './Game';\nimport ConnectedPageContainer from 'components/ConnectedPageContainer'\n\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/link-ws';\nimport {resolvers, localType} from 'graphQL/localState';\nimport PdfFormat from 'components/PdfFormat';\n\nconst cache = new InMemoryCache();\n\nconst httpLink = new HttpLink({\n  headers: { authorization: localStorage.getItem('esquisse-token') },\n  uri: process.env.NODE_ENV === \"development\" ? 'http://localhost:4000/graphql' : \"https://esquisse-api.herokuapp.com/graphql\"\n});\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.NODE_ENV === \"development\" ? `ws://localhost:4000/graphql` : \"wss://esquisse-api.herokuapp.com/graphql\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst link = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  cache,\n  link,\n  credentials: 'include',\n  localType,  resolvers,\n  dataIdFromObject: o=>o.id\n});\n\n\ncache.writeData({\n  data: {\n    isLoggedIn: !!localStorage.getItem('esquisse-token'),\n  },\n});\n\nexport default function ConnectedPaged(){\n    return(\n        <ApolloProvider client={client}>\n            <HashRouter>\n              <ConnectedPageContainer>\n                  <Switch>\n                      <Route path=\"/\" exact>\n                          <Home/> \n                      </Route>\n                      <Route path=\"/profile\">\n                          <Profile/> \n                      </Route>\n                      <Route \n                        path=\"/game/:gameId\"\n                      >\n                          <Game/>\n                      </Route>\n                      <Route \n                        path=\"/pdf/:gameId\"\n                      >\n                          <PdfFormat/>\n                      </Route>\n                  </Switch>\n              </ConnectedPageContainer>\n            </HashRouter>\n        </ApolloProvider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthPage from 'layouts/AuthPage';\nimport ConnectedPages from 'layouts/ConnectedPages';\n\n\nfunction IsLoggedIn() {\n  return localStorage.getItem('esquisse-token') ? <ConnectedPages/> : <AuthPage/>;\n}\n\nconst Root = () => {\n  return (\n    <IsLoggedIn />\n  );\n};\n\nReactDOM.render(<Root />, document.querySelector('#root'));\n","module.exports = __webpack_public_path__ + \"static/media/gearLoader.b5d684c5.gif\";"],"sourceRoot":""}